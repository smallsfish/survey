<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.hassdata.survey.dao.QuestionnaireDao">
    <resultMap id="questionnaireResult" type="Questionnaire">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="questionnaireColumns">
        <![CDATA[
        	id,
            questionnairename,
            questionnairecomp,
            questionnairefrom,
            questionnairebegintime,
            questionnaireendtime,
            questionnairecreatetime,
            questionnaireexplain,
            questionnairejson,
            aid
	    ]]>
    </sql>

    <sql id="questionnaireDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="questionnairename != null">
                and questionnairename = #{questionnairename}
            </if>
            <if test="questionnairecomp != null">
                and questionnairecomp = #{questionnairecomp}
            </if>
            <if test="questionnairebegintime != null">
                and questionnairebegintime = #{questionnairebegintime}
            </if>
            <if test="questionnaireendtime != null">
                and questionnaireendtime = #{questionnaireendtime}
            </if>
            <if test="questionnairecreatetime != null">
                and questionnairecreatetime = #{questionnairecreatetime}
            </if>
            <if test="questionnaireexplain != null">
                and questionnaireexplain = #{questionnaireexplain}
            </if>
            <if test="questionnairejson != null">
                and questionnairejson = #{questionnairejson}
            </if>
            <if test="aid != null">
                and aid = #{aid}
            </if>
        </where>
    </sql>

    <insert id="save" parameterType="Questionnaire" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
	        INSERT INTO
	        questionnaire (
	        	id,
	        	questionnairename,
	        	questionnairecomp,
	        	questionnairefrom,
	        	questionnairebegintime,
	        	questionnaireendtime,
	        	questionnairecreatetime,
	        	questionnaireexplain,
	        	questionnairejson,
	        	aid
	        ) VALUES (
	        	#{id,jdbcType=VARCHAR} ,
	        	#{questionnairename,jdbcType=VARCHAR},
	        	#{questionnairecomp,jdbcType=VARCHAR},
	        	#{questionnairefrom,jdbcType=VARCHAR},
	        	#{questionnairebegintime,jdbcType=TIMESTAMP},
	        	#{questionnaireendtime,jdbcType=TIMESTAMP},
	        	#{questionnairecreatetime,jdbcType=TIMESTAMP},
	        	#{questionnaireexplain,jdbcType=VARCHAR},
	        	#{questionnairejson,jdbcType=BLOB},
	        	#{aid,jdbcType=INTEGER}
	        )
	    ]]>
    </insert>

    <update id="update" parameterType="Questionnaire">
        <![CDATA[
	        UPDATE questionnaire SET
		        questionnairename = #{questionnairename,jdbcType=VARCHAR},
		        questionnairecomp = #{questionnairecomp,jdbcType=VARCHAR},
		        questionnairebegintime = #{questionnairebegintime,jdbcType=TIMESTAMP},
		        questionnaireendtime = #{questionnaireendtime,jdbcType=TIMESTAMP},
		        questionnairecreatetime = #{questionnairecreatetime,jdbcType=TIMESTAMP},
		        questionnaireexplain = #{questionnaireexplain,jdbcType=VARCHAR},
		        questionnairejson = #{questionnairejson,jdbcType=BLOB},
		        aid = #{aid,jdbcType=INTEGER}
			WHERE
				id = #{id}
	    ]]>
    </update>

    <update id="updateParams" parameterType="Questionnaire">
        UPDATE
        questionnaire
        <set>
            <if test="questionnairename != null">
                questionnairename = #{questionnairename,jdbcType=VARCHAR},
            </if>
            <if test="questionnairecomp != null">
                questionnairecomp = #{questionnairecomp,jdbcType=VARCHAR},
            </if>
            <if test="questionnairebegintime != null">
                questionnairebegintime = #{questionnairebegintime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionnaireendtime != null">
                questionnaireendtime = #{questionnaireendtime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionnairecreatetime != null">
                questionnairecreatetime = #{questionnairecreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="questionnaireexplain != null">
                questionnaireexplain = #{questionnaireexplain,jdbcType=VARCHAR},
            </if>
            <if test="questionnairejson != null">
                questionnairejson = #{questionnairejson,jdbcType=BLOB},
            </if>
            <if test="aid != null">
                aid = #{aid,jdbcType=INTEGER},
            </if>
        </set>
        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        <![CDATA[
	        delete from questionnaire where
	        id = #{id}
	    ]]>
    </delete>

    <delete id="deleteByStringId" parameterType="java.lang.String">
        <![CDATA[
	        delete from questionnaire where
	        id = #{id}
	    ]]>
    </delete>

    <select id="find" parameterType="java.lang.Integer" resultMap="questionnaireResult">
        select <include refid="questionnaireColumns" />
        <![CDATA[
		    from questionnaire
	        where
		        id = #{id}
	    ]]>
    </select>
     <select id="findByStringId" parameterType="java.lang.String" resultMap="questionnaireResult">
            select <include refid="questionnaireColumns" />
            <![CDATA[
                from questionnaire
                where
                    id = #{id}
            ]]>
     </select>

    <select id="count" resultType="long" parameterType="Questionnaire">
        select count(1) from questionnaire
        <include refid="questionnaireDynamicWhere"/>
    </select>

    <select id="getOne" resultMap="questionnaireResult" parameterType="map">
        select <include refid="questionnaireColumns"/> from questionnaire
        <include refid="questionnaireDynamicWhere"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        limit 0,1
    </select>

    <select id="getAll" resultMap="questionnaireResult" parameterType="map">
        select <include refid="questionnaireColumns"/> from questionnaire
        <include refid="questionnaireDynamicWhere"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="getScrollData" resultMap="questionnaireResult" parameterType="map">
        select <include refid="questionnaireColumns" />
        from questionnaire
        <include refid="questionnaireDynamicWhere"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
    </select>

    <select id="getScrollCount" resultType="long" parameterType="map">
        select count(1) from questionnaire
        <include refid="questionnaireDynamicWhere"/>
    </select>
    <!-- 以上为自动生成部分，使用中勿作改动；自己新增sql在以下部分去写。如库表变动，将生成的部分覆盖以上部分即可。 -->








    <sql id="questionnaireLikeDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            <if test="id != null">
                and id LIKE #{id}
            </if>
            <if test="questionnairename != null">
                and questionnairename LIKE #{questionnairename}
            </if>
            <if test="questionnairecomp != null">
                and questionnairecomp LIKE #{questionnairecomp}
            </if>
            <if test="questionnairefrom != null">
                and questionnairefrom LIKE #{questionnairefrom}
            </if>
            <if test="questionnairebegintime != null">
                and questionnairebegintime LIKE #{questionnairebegintime}
            </if>
            <if test="questionnaireendtime != null">
                and questionnaireendtime LIKE #{questionnaireendtime}
            </if>
            <if test="questionnairecreatetime != null">
                and questionnairecreatetime LIKE #{questionnairecreatetime}
            </if>
            <if test="questionnaireexplain != null">
                and questionnaireexplain LIKE #{questionnaireexplain}
            </if>
            <if test="questionnairejson != null">
                and questionnairejson LIKE #{questionnairejson}
            </if>
            <if test="aid != null">
                and aid LIKE #{aid}
            </if>
        </where>
    </sql>

    <select id="getScrollDataByLike" resultMap="questionnaireResult" parameterType="map">
        select
        <include refid="questionnaireColumns"/>
        from questionnaire
        <include refid="questionnaireLikeDynamicWhere"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
    </select>
    <select id="getScrollByLikeCount" resultType="long" parameterType="map">
        select count(1) from questionnaire
        <include refid="questionnaireLikeDynamicWhere"/>
    </select>
</mapper>